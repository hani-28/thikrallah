// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlinVersion = '1.8.0'
        daggerVersion = '2.21'
        androidxVersion = '1.12.0'
        androidxAnnotationVersion = '1.3.0'
        androidxMediaVersion = '1.7.0'
        androidxPreferencesVersion = '1.2.1'
        androidxAppcompatVersion = '1.7.0'
        espressoVersion = '3.5.0-alpha03'
        okhttpVersion = '3.12.1'


        deps = [
                android: [
                        build: [
                                minSdkVersion    : 21,
                                targetSdkVersion : 34,
                                compileSdkVersion: 34
                        ]
                ],
                kotlin: [
                        stdlib: "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
                ],
                dagger: [
                        apt: "com.google.dagger:dagger-compiler:${daggerVersion}",
                        runtime: "com.google.dagger:dagger:${daggerVersion}"
                ]
        ]
    }

    // workaround for proguard failing to parse moshi's proguard rules
    buildscript {
        configurations.configureEach {
            resolutionStrategy {
                force 'net.sf.proguard:proguard-gradle:6.1.0beta2'
            }
        }
    }

    repositories {
        google()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
        //jcenter()

    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.6.1'
        classpath 'com.google.gms:google-services:4.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:3.1.0"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        //jcenter()

    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs += [

        ]
    }

    afterEvaluate {
        extensions.findByName('kapt')?.arguments {
        }
    }
}


