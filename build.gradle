// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlinVersion = '1.3.21'
        daggerVersion = '2.21'
        androidxVersion = '1.0.0'
        androidxMediaVersion = '1.0.1'
        androidxPreferencesVersion = '1.1.0-alpha05'
        androidxAppcompatVersion = '1.0.2'
        espressoVersion = '3.1.0-beta02'
        okhttpVersion = '3.12.1'


        deps = [
                android: [
                        build: [
                                minSdkVersion    : 21,
                                targetSdkVersion : 28,
                                compileSdkVersion: 28
                        ]
                ],
                kotlin: [
                        stdlib: "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
                ],
                dagger: [
                        apt: "com.google.dagger:dagger-compiler:${daggerVersion}",
                        runtime: "com.google.dagger:dagger:${daggerVersion}"
                ]
        ]
    }

    // workaround for proguard failing to parse moshi's proguard rules
    buildscript {
        configurations.all {
            resolutionStrategy {
                force 'net.sf.proguard:proguard-gradle:6.1.0beta2'
            }
        }
    }

    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        //classpath 'com.android.tools.build:gradle:3.4.0'
        classpath 'com.android.tools.build:gradle:3.4.0'
        classpath "io.fabric.tools:gradle:1.27.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.13"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    tasks.withType(JavaCompile).all {
        options.compilerArgs += [
                '-Adagger.formatGeneratedSource=disabled',
                '-Adagger.gradle.incremental=enabled'
        ]
    }

    afterEvaluate {
        extensions.findByName('kapt')?.arguments {
            arg("dagger.formatGeneratedSource", "disabled")
            arg("dagger.gradle.incremental", "enabled")
        }
    }
}


